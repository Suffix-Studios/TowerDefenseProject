/**
 * Exports the zlib namespace.
 * @module zlib
 */
export = zlib;
export as namespace zlib;

declare namespace zlib {
    /**
     * Configuration options for compression and decompression.
     */
    interface config {
        /**
         * Compression level. Higher level leads to more compression but consumes more time.
         */
        level?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;

        /**
         * Compression strategy. 
         */
        strategy?: "huffman_only" | "fixed" | "dynamic";
    }

    /**
     * Namespace for Deflate compression and decompression.
     */
    namespace Deflate {
        /**
         * Compresses the input data using Deflate algorithm.
         * @param data - The input data to compress.
         * @param configs - Optional configuration options.
         * @returns The compressed data as a string.
         */
        function Compress(data: string, configs?: config): string;

        /**
         * Decompresses the input data using Deflate algorithm.
         * @param data - The input data to decompress.
         * @returns The decompressed data.
         */
        function Decompress(data: string): any;
    }

    /**
     * Namespace for Zlib compression and decompression.
     */
    namespace Zlib {
        /**
         * Compresses the input data using Zlib algorithm.
         * @param data - The input data to compress.
         * @param configs - Optional configuration options.
         * @returns The compressed data as a string.
         */
        function Compress(data: string, configs?: config): string;

        /**
         * Decompresses the input data using Zlib algorithm.
         * @param data - The input data to decompress.
         * @returns The decompressed data.
         */
        function Decompress(data: string): any;
    }
}