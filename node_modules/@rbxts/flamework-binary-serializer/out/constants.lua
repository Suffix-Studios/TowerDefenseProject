-- Compiled with roblox-ts v2.3.0
-- This does not account for potential floating point drift but this is likely not an issue for axis aligned orientations.
local _exp = { { 0, 0, 0 }, { 0, 180, 0 }, { 90, 0, 0 }, { -90, -180, 0 }, { 0, 180, 180 }, { 0, 0, 180 }, { -90, 0, 0 }, { 90, 180, 0 }, { 0, 180, 90 }, { 0, 0, -90 }, { 0, 90, 90 }, { 0, -90, -90 }, { 0, 0, 90 }, { 0, -180, -90 }, { 0, -90, 90 }, { 0, 90, -90 }, { -90, -90, 0 }, { 90, 90, 0 }, { 0, -90, 0 }, { 0, 90, 0 }, { 90, -90, 0 }, { -90, 90, 0 }, { 0, 90, 180 }, { 0, -90, -180 } }
-- ▼ ReadonlyArray.map ▼
local _newValue = table.create(#_exp)
local _callback = function(_param)
	local x = _param[1]
	local y = _param[2]
	local z = _param[3]
	return CFrame.Angles(math.rad(x), math.rad(y), math.rad(z))
end
for _k, _v in _exp do
	_newValue[_k] = _callback(_v, _k - 1, _exp)
end
-- ▲ ReadonlyArray.map ▲
local AXIS_ALIGNED_ORIENTATIONS = _newValue
--[[
	*
	 * Returns a consistently ordered array for a specific Enum.
	 *
	 * We can't send Enum values over the network as the values aren't always within the 8 bit limit,
	 * so instead we send the EnumItem's position in the array returned here.
	 
]]
local function getSortedEnumItems(enumObject)
	local enumItems = enumObject:GetEnumItems()
	table.sort(enumItems, function(a, b)
		return a.Value < b.Value
	end)
	return enumItems
end
return {
	getSortedEnumItems = getSortedEnumItems,
	AXIS_ALIGNED_ORIENTATIONS = AXIS_ALIGNED_ORIENTATIONS,
}
