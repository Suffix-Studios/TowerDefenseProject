// File generated by Blink v0.17.4 (https://github.com/1Axen/Blink)
// This file is not meant to be edited

export declare const stepReplication: () => void
export declare namespace Common {
	export namespace Shared {
		type EnemyType = "Normal" | "Speedy" | "Tanky" | "MiniBoss" | "Boss"
		type InventoryTower = { Exp: number, Name: string, Level: number }
		type PlayerData = { Gold?: number | undefined, Silver?: number | undefined, Level?: number | undefined, Exp?: number | undefined, MaxTowers?: number | undefined, TowersInventory?: Map<string, { Exp: number, Name: string, Level: number }> | undefined, Loadout?: string[] | undefined }
	}
	export namespace Client {
		type InputAction = { Action: string, State: unknown, Key: unknown }
	}
	export namespace Server {
	}
}
export declare const entityRemoved: {
	fire: (Player: Player, Value: number) => void
	fireAll: (Value: number) => void
	fireExcept: (Except: Player, Value: number) => void
	fireList: (List: Player[], Value: number) => void
}
export declare namespace Enemy {
	export const enemyAdded: {
		fire: (Player: Player, Value: { ModelName: string, Type: "Normal" | "Speedy" | "Tanky" | "MiniBoss" | "Boss", Air: boolean, Speed: number, MaxHealth: number, T: number }) => void
		fireAll: (Value: { ModelName: string, Type: "Normal" | "Speedy" | "Tanky" | "MiniBoss" | "Boss", Air: boolean, Speed: number, MaxHealth: number, T: number }) => void
		fireExcept: (Except: Player, Value: { ModelName: string, Type: "Normal" | "Speedy" | "Tanky" | "MiniBoss" | "Boss", Air: boolean, Speed: number, MaxHealth: number, T: number }) => void
		fireList: (List: Player[], Value: { ModelName: string, Type: "Normal" | "Speedy" | "Tanky" | "MiniBoss" | "Boss", Air: boolean, Speed: number, MaxHealth: number, T: number }) => void
	}
}
export declare namespace Tower {
	export const towerAdded: {
		fire: (Player: Player, Value: { TowerName: string, Owner: number, Position: Vector3 }) => void
		fireAll: (Value: { TowerName: string, Owner: number, Position: Vector3 }) => void
		fireExcept: (Except: Player, Value: { TowerName: string, Owner: number, Position: Vector3 }) => void
		fireList: (List: Player[], Value: { TowerName: string, Owner: number, Position: Vector3 }) => void
	}
	export const placeTower: {
		on: (Listener: (Player: Player, Value: { Origin: Vector3, Direction: Vector3, Slot: number }) => void) => (() => void)
	}
}
